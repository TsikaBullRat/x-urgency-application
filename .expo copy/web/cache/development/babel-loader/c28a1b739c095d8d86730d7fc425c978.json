{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MLab\\\\Desktop\\\\React-Native\\\\X-Urgency\\\\x-urgency-application\\\\src\\\\Components\\\\Alert.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar AlertNote = function AlertNote(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible,\n      msg = _ref.msg,\n      excess = _ref.excess;\n\n  var Press = function Press() {\n    excess ? excess(true) : null;\n    setModalVisible(false);\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(Pressable, {\n    style: styles.backdrop,\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.alertBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, msg), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: Press,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, \"OK\")))));\n};\n\nvar styles = StyleSheet.create({\n  backdrop: _objectSpread({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }, Platform.select({\n    ios: {\n      backgroundColor: \"#000000\",\n      opacity: 0.3\n    },\n    android: {\n      backgroundColor: \"#232f34\",\n      opacity: 0.32\n    },\n    web: {\n      backgroundColor: '#000',\n      opacity: 0.3\n    },\n    default: {\n      backgroundColor: '#000',\n      opacity: 0.3\n    }\n  })),\n  alertBox: {\n    backgroundColor: '#F47066',\n    width: '80%',\n    height: 250,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 25,\n    color: '#fff'\n  },\n  button: {\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 80,\n    height: 40,\n    marginTop: 20,\n    borderRadius: 25\n  },\n  btnText: {\n    fontSize: 15,\n    color: '#F47066'\n  }\n});\nexport { AlertNote };","map":{"version":3,"sources":["C:/Users/MLab/Desktop/React-Native/X-Urgency/x-urgency-application/src/Components/Alert.js"],"names":["React","AlertNote","modalVisible","setModalVisible","msg","excess","Press","styles","backdrop","modal","alertBox","text","button","btnText","StyleSheet","create","position","top","left","right","bottom","Platform","select","ios","backgroundColor","opacity","android","web","default","width","height","borderRadius","justifyContent","alignItems","flex","fontSize","color","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Modal, Platform, Pressable, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nconst AlertNote = ({ modalVisible, setModalVisible, msg, excess }) => {\r\n\r\n    const Press = () =>{\r\n        excess? excess(true) : null\r\n        setModalVisible(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={() => {\r\n                setModalVisible(!modalVisible);\r\n            }}>\r\n            <Pressable style={styles.backdrop} onPress={() => setModalVisible(false)} ></Pressable>\r\n            <View style={styles.modal}>\r\n                <View style={styles.alertBox}>\r\n                    <Text style={styles.text}>{msg}</Text>\r\n                    <TouchableOpacity style={styles.button} onPress={Press}>\r\n                        <Text style={styles.btnText}>OK</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                </View>\r\n            \r\n        </Modal>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    backdrop: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        ...Platform.select({\r\n            ios: {\r\n                backgroundColor: \"#000000\",\r\n                opacity: 0.3\r\n            },\r\n            android: {\r\n                backgroundColor: \"#232f34\",\r\n                opacity: 0.32\r\n            },\r\n            web: {\r\n                backgroundColor: '#000',\r\n                opacity: 0.3\r\n            },\r\n            default: {\r\n                backgroundColor: '#000',\r\n                opacity: 0.3\r\n            }\r\n        })\r\n    },\r\n    alertBox: {\r\n        backgroundColor: '#F47066',\r\n        width: '80%',\r\n        height: 250,\r\n        borderRadius: 25,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    modal: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    text: {\r\n        fontSize: 25,\r\n        color: '#fff'\r\n    },\r\n    button: {\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 80,\r\n        height: 40,\r\n        marginTop: 20,\r\n        borderRadius: 25,\r\n    },\r\n    btnText: {\r\n        fontSize: 15,\r\n        color: '#F47066'\r\n    }\r\n})\r\nexport { AlertNote }"]},"metadata":{},"sourceType":"module"}