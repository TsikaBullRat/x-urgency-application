{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MLab\\\\Desktop\\\\React-Native\\\\X-Urgency\\\\x-urgency-application\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ForgotPassword from \"./src/Screens/ForgotPassword\";\nimport { SignIn, SignUp, Home, Strokes } from \"./src/Screens\";\nimport { auth } from \"./src/firebase\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      successful = _useState2[0],\n      setSuccess = _useState2[1],\n      _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      return setUser(user);\n    });\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, successful ? user ? React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, function (props) {\n    return React.createElement(Home, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Strokes\",\n    component: Strokes,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })) : null : React.createElement(Stack.Navigator, {\n    initialRouteName: \"SignIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Sign In\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(SignIn, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Sign Up\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(SignUp, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Reset Password\",\n    component: ForgotPassword,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/MLab/Desktop/React-Native/X-Urgency/x-urgency-application/App.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","ForgotPassword","SignIn","SignUp","Home","Strokes","auth","Stack","App","successful","setSuccess","user","setUser","onAuthStateChanged","headerShown","props"],"mappings":";;;AAYA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,cAAP;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B;AACA,SAAQC,IAAR;AACA,IAAMC,KAAK,GAAGP,0BAA0B,EAAxC;AACA,eAAe,SAASQ,GAAT,GAAe;AAAA;;AAE5B,kBAAiCX,QAAQ,CAAC,KAAD,CAAzC;AAAA;AAAA,MAAOY,UAAP;AAAA,MAAmBC,UAAnB;AAAA,mBACwBb,QAAQ,CAAC,IAAD,CADhC;AAAA;AAAA,MACOc,IADP;AAAA,MACaC,OADb;;AAGAd,EAAAA,SAAS,CAAC,YAAI;AACZQ,IAAAA,IAAI,CAACO,kBAAL,CAAwB,UAAAF,IAAI;AAAA,aAAEC,OAAO,CAACD,IAAD,CAAT;AAAA,KAA5B;AACD,GAFQ,EAEP,EAFO,CAAT;AAGA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,GACXE,IAAI,GAEF,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,OAAO,EAAE;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,UAAAC,KAAK;AAAA,WAAE,oBAAC,IAAD,eAAUA,KAAV;AAAiB,MAAA,OAAO,EAAEL,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;AAAA,GADN,CADF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEL,OAAxC;AAAiD,IAAA,OAAO,EAAE;AAAES,MAAAA,WAAW,EAAE;AAAf,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFE,GAUF,IAXS,GAgBX,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,OAAO,EAAE;AAAEA,MAAAA,WAAW,EAAE;AAAf,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,KAAK;AAAA,WAAE,oBAAC,MAAD,eAAYA,KAAZ;AAAmB,MAAA,OAAO,EAAEL,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;AAAA,GADR,CAJF,EAQE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,OAAO,EAAE;AAAEI,MAAAA,WAAW,EAAE;AAAf,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,KAAK;AAAA,WAAE,oBAAC,MAAD,eAAYA,KAAZ;AAAmB,MAAA,OAAO,EAAEL,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;AAAA,GADR,CARF,EAYE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,SAAS,EAAET,cAA/C;AAA+D,IAAA,OAAO,EAAE;AAAEa,MAAAA,WAAW,EAAE;AAAf,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAjBF,CADF;AA2CD","sourcesContent":["/**\r\n    * @description      : \r\n    * @author           : MLab\r\n    * @group            : \r\n    * @created          : 07/10/2021 - 10:00:40\r\n    * \r\n    * MODIFICATION LOG\r\n    * - Version         : 1.0.0\r\n    * - Date            : 07/10/2021\r\n    * - Author          : MLab\r\n    * - Modification    : \r\n**/\r\nimport React, {useState, useEffect} from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport ForgotPassword from './src/Screens/ForgotPassword';\r\n// You can import from local files\r\nimport { SignIn, SignUp, Home, Strokes} from './src/Screens';\r\nimport {auth} from './src/firebase'\r\nconst Stack = createNativeStackNavigator();\r\nexport default function App() {\r\n\r\n  const [successful, setSuccess] = useState(false),\r\n        [user, setUser] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    auth.onAuthStateChanged(user=>setUser(user))\r\n  },[])\r\n  return (\r\n    <NavigationContainer>\r\n      {successful?(\r\n      user?(\r\n      // Main Application\r\n        <Stack.Navigator initialRouteName=\"Home\">\r\n          <Stack.Screen name=\"Home\" options={{ headerShown: false }} >\r\n          {props=><Home {...props} setDone={setSuccess}/>}\r\n        </Stack.Screen>\r\n          <Stack.Screen name=\"Strokes\" component={Strokes} options={{ headerShown: false }}/>\r\n        </Stack.Navigator>\r\n      ):(\r\n        //Loader\r\n        null\r\n      )\r\n    ):(\r\n    // Login/Sign functions\r\n    \r\n      <Stack.Navigator initialRouteName=\"SignIn\">\r\n\r\n\r\n\r\n        <Stack.Screen name=\"Sign In\" options={{ headerShown: false }} >\r\n          {props=><SignIn {...props} setDone={setSuccess}/>}\r\n        </Stack.Screen>\r\n\r\n        <Stack.Screen name=\"Sign Up\" options={{ headerShown: false }}>\r\n          {props=><SignUp {...props} setDone={setSuccess}/>}\r\n        </Stack.Screen>\r\n\r\n        <Stack.Screen name=\"Reset Password\" component={ForgotPassword} options={{ headerShown: false }}/>\r\n\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n      </Stack.Navigator>\r\n    \r\n     )}\r\n    </NavigationContainer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}