{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { storage } from \"../config\";\n\nvar LoadSet = function LoadSet(Load) {\n  var content, list;\n  return _regeneratorRuntime.async(function LoadSet$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(storage.ref().child('').listAll().then(function (res) {\n            res.items.forEach(function (itemRef) {\n              var link = itemRef.toString();\n              var name = itemRef.name;\n              content = [].concat(_toConsumableArray(content), [{\n                link: link,\n                title: name\n              }]);\n              return content;\n            });\n            return content;\n          }).then(function (item) {\n            return console.log(item);\n          }).catch(function (err) {\n            return null;\n          }));\n\n        case 2:\n          list = _context.sent;\n          console.log(list);\n          Load(list);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { LoadSet };","map":{"version":3,"sources":["C:/Users/MLab/Desktop/React-Native/X-Urgency/x-urgency-application/src/firebase/Storage/Storage.functions.js"],"names":["storage","LoadSet","Load","ref","child","listAll","then","res","items","forEach","itemRef","link","toString","name","content","title","item","console","log","catch","err","list"],"mappings":";;AAAA,SAASA,OAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGKF,OAAO,CAACG,GAAR,GAAcC,KAAd,CAAoB,EAApB,EAAwBC,OAAxB,GACZC,IADY,CACP,UAAAC,GAAG,EAAI;AACTA,YAAAA,GAAG,CAACC,KAAJ,CAAUC,OAAV,CAAkB,UAAAC,OAAO,EAAI;AACzB,kBAAIC,IAAI,GAAGD,OAAO,CAACE,QAAR,EAAX;AACA,kBAAIC,IAAI,GAAGH,OAAO,CAACG,IAAnB;AACAC,cAAAA,OAAO,gCAAOA,OAAP,IAAgB;AAAEH,gBAAAA,IAAI,EAAEA,IAAR;AAAcI,gBAAAA,KAAK,EAAEF;AAArB,eAAhB,EAAP;AACA,qBAAOC,OAAP;AACH,aALD;AAMA,mBAAOA,OAAP;AACH,WATY,EAUZR,IAVY,CAUP,UAAAU,IAAI;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,WAVG,EAWZG,KAXY,CAWN,UAAAC,GAAG,EAAI;AACV,mBAAO,IAAP;AACH,WAbY,CAHL;;AAAA;AAGRC,UAAAA,IAHQ;AAiBZJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAnB,UAAAA,IAAI,CAACmB,IAAD,CAAJ;;AAlBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAqBA,SAASpB,OAAT","sourcesContent":["import { storage } from '../config'\r\n\r\nconst LoadSet = async (Load) => {\r\n\r\n    var content\r\n    let list = await storage.ref().child('').listAll()\r\n        .then(res => {\r\n            res.items.forEach(itemRef => {\r\n                let link = itemRef.toString()\r\n                let name = itemRef.name\r\n                content = [...content, { link: link, title: name }]\r\n                return content\r\n            })\r\n            return content\r\n        })\r\n        .then(item => console.log(item))\r\n        .catch(err => {\r\n            return null\r\n        })\r\n    console.log(list)\r\n    Load(list)\r\n}\r\n\r\nexport { LoadSet }"]},"metadata":{},"sourceType":"module"}