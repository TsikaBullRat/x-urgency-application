{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MLab\\\\Desktop\\\\React-Native\\\\X-Urgency\\\\x-urgency-application\\\\src\\\\Screens\\\\UploadVideo.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Card } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Sharing from 'expo-sharing';\nimport uploadToAnonymousFilesAsync from 'anonymous-files';\nimport { FontAwesome, AntDesign, EvilIcons } from '@expo/vector-icons';\nexport default function UploadVideo() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedImage = _React$useState2[0],\n      setSelectedImage = _React$useState2[1];\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult, remoteUri;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert('Permission to access camera roll is required!');\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 11:\n            if (!(Platform.OS === 'web')) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(uploadToAnonymousFilesAsync(pickerResult.uri));\n\n          case 14:\n            remoteUri = _context.sent;\n            setSelectedImage({\n              localUri: pickerResult.uri,\n              remoteUri: remoteUri\n            });\n            _context.next = 19;\n            break;\n\n          case 18:\n            setSelectedImage({\n              localUri: pickerResult.uri,\n              remoteUri: 'https://moon.jpg'\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openShareDialogAsync = function openShareDialogAsync() {\n    return _regeneratorRuntime.async(function openShareDialogAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Sharing.isAvailableAsync());\n\n          case 2:\n            if (_context2.sent) {\n              _context2.next = 5;\n              break;\n            }\n\n            alert(\"The image is available for sharing at: ${`selectedImage.remoteUri`}\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            Sharing.shareAsync(selectedImage.remoteUri || selectedImage.localUri);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (selectedImage !== null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: selectedImage.localUri\n      },\n      style: styles.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: openShareDialogAsync,\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Share this photo\")));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: -240,\n      fontSize: 20,\n      color: \"000000\",\n      fontWeight: \"bold\",\n      marginLeft: -10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Upload Or Create Your First Aid Video Here\")), React.createElement(Card, {\n    style: styles.txtCards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Card, {\n    style: [styles.txtUser, styles.shadowProp],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      paddingTop: -300,\n      marginLeft: -20,\n      marginTop: 30,\n      color: 'lightgrey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Upload Video Here!\")), React.createElement(Icon, {\n    style: styles.icon,\n    name: \"slideshow\",\n    color: \"#f47066\",\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })))), React.createElement(TouchableOpacity, {\n    onPress: openImagePickerAsync,\n    style: [styles.button, styles.shadowProp],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Upload Video\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginTop: 30,\n    marginLeft: 40\n  },\n  title: {\n    width: 300,\n    height: 40,\n    borderRadius: 10,\n    outline: 'none',\n    backgroundColor: 'white',\n    paddingLeft: 20,\n    marginTop: -140,\n    color: \"lightgray\"\n  },\n  shadowProp: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  },\n  description: {\n    width: 300,\n    height: 40,\n    borderRadius: 10,\n    outline: 'none',\n    backgroundColor: 'white',\n    paddingLeft: 20,\n    marginTop: -70\n  },\n  txtUser: {\n    width: 300,\n    height: 200,\n    borderRadius: 10,\n    outline: 'none',\n    backgroundColor: 'white',\n    paddingLeft: 100\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: '#f47066',\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: \"white\",\n    marginRight: 150,\n    height: 50,\n    marginTop: 40\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff',\n    marginTop: -5\n  },\n  iconContainer: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#f47066',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'white',\n    borderWidth: 3,\n    marginTop: -55,\n    marginLeft: 250\n  },\n  thumbnail: {\n    width: 300,\n    height: 300,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["C:/Users/MLab/Desktop/React-Native/X-Urgency/x-urgency-application/src/Screens/UploadVideo.js"],"names":["React","Card","ImagePicker","Sharing","uploadToAnonymousFilesAsync","FontAwesome","AntDesign","EvilIcons","UploadVideo","useState","selectedImage","setSelectedImage","openImagePickerAsync","requestCameraRollPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","cancelled","Platform","OS","uri","remoteUri","localUri","openShareDialogAsync","isAvailableAsync","shareAsync","styles","container","thumbnail","button","buttonText","marginTop","fontSize","color","fontWeight","marginLeft","txtCards","flexDirection","txtUser","shadowProp","paddingTop","icon","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","title","width","height","borderRadius","outline","paddingLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius","description","instructions","marginHorizontal","marginBottom","padding","borderWidth","borderColor","marginRight","iconContainer","resizeMode"],"mappings":"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","sourcesContent":["/**\r\n    * @description      : \r\n    * @author           : TLeeuw\r\n    * @group            : \r\n    * @created          : 02/11/2021 - 09:06:04\r\n    * \r\n    * MODIFICATION LOG\r\n    * - Version         : 1.0.0\r\n    * - Date            : 02/11/2021\r\n    * - Author          : TLeeuw\r\n    * - Modification    : \r\n**/\r\nimport React from 'react';\r\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View, TextInput } from 'react-native';\r\nimport { Card } from 'react-native-paper'\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Sharing from 'expo-sharing';\r\nimport uploadToAnonymousFilesAsync from 'anonymous-files';\r\nimport { FontAwesome, AntDesign, EvilIcons } from '@expo/vector-icons';\r\n\r\nexport default function UploadVideo() {\r\n  let [selectedImage, setSelectedImage] = React.useState(null);\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult = await ImagePicker.requestCameraRollPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      alert('Permission to access camera roll is required!');  \r\n      return;\r\n    }\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n    if (Platform.OS === 'web') {\r\n      let remoteUri = await uploadToAnonymousFilesAsync(pickerResult.uri);\r\n      setSelectedImage({ localUri: pickerResult.uri, remoteUri });\r\n    } else {\r\n      setSelectedImage({ localUri: pickerResult.uri, remoteUri: 'https://moon.jpg' });\r\n    }\r\n  };\r\n  let openShareDialogAsync = async () => {\r\n    if (!(await Sharing.isAvailableAsync())) {\r\n      alert(\"The image is available for sharing at: ${`selectedImage.remoteUri`}\");\r\n      return;\r\n    }\r\n    Sharing.shareAsync(selectedImage.remoteUri || selectedImage.localUri);\r\n  };\r\n  if (selectedImage !== null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Image source={{ uri: selectedImage.localUri }} style={styles.thumbnail} />\r\n        <TouchableOpacity onPress={openShareDialogAsync} style={styles.button}>\r\n          <Text style={styles.buttonText}>Share this photo</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <View>\r\n        <Text style={{ marginTop: -240, fontSize: 20, color: \"000000\", fontWeight: \"bold\", marginLeft: -10 }}>Upload Or Create Your First Aid Video Here\r\n        </Text>       \r\n      </View>\r\n\r\n\r\n      <Card style={styles.txtCards}>\r\n        <View style={{ flexDirection: 'row' }}>\r\n\r\n          <Card style={[styles.txtUser, styles.shadowProp]}>\r\n            <View>\r\n              <Text style={{ fontSize: 16, paddingTop: -300, marginLeft: -20, marginTop: 30, color: 'lightgrey' }}>Upload Video Here!</Text>\r\n            </View>\r\n            <Icon style={styles.icon} name=\"slideshow\" color=\"#f47066\" size={40} />\r\n          </Card>\r\n\r\n        </View>\r\n      </Card>\r\n\r\n\r\n \r\n      <TouchableOpacity onPress={openImagePickerAsync} style={[styles.button, styles.shadowProp]}>\r\n        <Text style={styles.buttonText}>Upload Video</Text>\r\n      </TouchableOpacity>\r\n      \r\n\r\n\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {\r\n    marginTop: 30,\r\n    marginLeft: 40,\r\n  },\r\n  title: {\r\n    width: 300,\r\n    height: 40,\r\n    borderRadius: 10,\r\n    outline: 'none',\r\n    backgroundColor: 'white',\r\n    paddingLeft: 20,\r\n    marginTop: -140,\r\n    color: \"lightgray\"\r\n  },\r\n  shadowProp: {\r\n    shadowColor: '#171717',\r\n    shadowOffset: { width: -2, height: 4 },\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 10,\r\n  },\r\n  description: {\r\n    width: 300,\r\n    height: 40,\r\n    borderRadius: 10,\r\n    outline: 'none',\r\n    backgroundColor: 'white',\r\n    paddingLeft: 20,\r\n    marginTop: -70,\r\n  },\r\n  txtUser: {\r\n    width: 300,\r\n    height: 200,\r\n    borderRadius: 10,\r\n    outline: 'none',\r\n    backgroundColor: 'white',\r\n    paddingLeft: 100,\r\n  },\r\n  instructions: {\r\n    color: '#888',\r\n    fontSize: 18,\r\n    marginHorizontal: 15,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#f47066',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    borderWidth: 3,\r\n    borderColor: \"white\",\r\n    marginRight: 150,\r\n    height: 50,\r\n    marginTop: 40,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n    marginTop: -5,\r\n  },\r\n  iconContainer: {\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: '#f47066',\r\n    borderRadius: 60,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderColor: 'white',\r\n    borderWidth: 3,\r\n    marginTop: -55,\r\n    marginLeft: 250,\r\n  },\r\n  thumbnail: {\r\n    width: 300,\r\n    height: 300,\r\n    resizeMode: 'contain',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}