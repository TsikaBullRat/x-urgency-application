{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MLab\\\\Desktop\\\\React-Native\\\\X-Urgency\\\\x-urgency-application\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { SignIn, SignUp, Home, Strokes, ForgotPassword, DoctorSignUp } from \"./src/Screens\";\nimport { auth } from \"./src/firebase\";\nimport { ActivityIndicator } from 'react-native-paper';\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      successful = _useState2[0],\n      setSuccess = _useState2[1],\n      _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      setSuccess(true);\n    });\n    return function () {\n      auth.onAuthStateChanged(function (user) {\n        setSuccess(true);\n      });\n    };\n  }, [successful, user]);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, successful ? user ? React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return React.createElement(Home, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Strokes\",\n    component: Strokes,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })) : React.createElement(Stack.Navigator, {\n    initialRouteName: \"SignIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Sign In\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return React.createElement(SignIn, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Sign Up\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return React.createElement(SignUp, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Reset Password\",\n    component: ForgotPassword,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })) : React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/MLab/Desktop/React-Native/X-Urgency/x-urgency-application/App.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","KeyboardAwareScrollView","SignIn","SignUp","Home","Strokes","ForgotPassword","DoctorSignUp","auth","ActivityIndicator","Stack","App","successful","setSuccess","user","setUser","onAuthStateChanged","headerShown","props"],"mappings":"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","sourcesContent":["/**\r\n    * @description      : \r\n    * @author           : TLeeuw\r\n    * @group            : \r\n    * @created          : 12/10/2021 - 16:06:47\r\n    * \r\n    * MODIFICATION LOG\r\n    * - Version         : 1.0.0\r\n    * - Date            : 12/10/2021\r\n    * - Author          : TLeeuw\r\n    * - Modification    : \r\n**/\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n// You can import from local files\r\nimport { SignIn, SignUp, Home, Strokes, ForgotPassword, DoctorSignUp } from './src/Screens';\r\nimport { auth } from './src/firebase'\r\nimport { ActivityIndicator } from 'react-native-paper';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nexport default function App() {\r\n  const [successful, setSuccess] = useState(false),\r\n    [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      // setUser(user)\r\n      setSuccess(true)\r\n    })\r\n    return () => {\r\n      auth.onAuthStateChanged(user => {\r\n        // setUser(user)\r\n        setSuccess(true)\r\n      })\r\n    }\r\n  }, [successful, user])\r\n  return (\r\n    <NavigationContainer>\r\n      <KeyboardAwareScrollView>\r\n        {successful ? (\r\n          user ? (\r\n            // Main Application\r\n            <Stack.Navigator initialRouteName=\"Home\">\r\n              <Stack.Screen name=\"Home\" options={{ headerShown: false }} >\r\n                {props => <Home {...props} setDone={setSuccess} />}\r\n              </Stack.Screen>\r\n              <Stack.Screen name=\"Strokes\" component={Strokes} options={{ headerShown: false }} />\r\n            </Stack.Navigator>\r\n          ) : (\r\n            //Loader\r\n            <Stack.Navigator initialRouteName=\"SignIn\">\r\n              <Stack.Screen name=\"Sign In\" options={{ headerShown: false }} >\r\n                {props => <SignIn {...props} setDone={setSuccess} />}\r\n              </Stack.Screen>\r\n              <Stack.Screen name=\"Sign Up\" options={{ headerShown: false }}>\r\n                {props => <SignUp {...props} setDone={setSuccess} />}\r\n              </Stack.Screen>\r\n              \r\n              <Stack.Screen name=\"Reset Password\" component={ForgotPassword} options={{ headerShown: false }} />\r\n            </Stack.Navigator>\r\n          )\r\n        ) : (\r\n          // Login/Sign functions\r\n          <ActivityIndicator size=\"large\" />\r\n        )}\r\n      </KeyboardAwareScrollView>\r\n    </NavigationContainer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}