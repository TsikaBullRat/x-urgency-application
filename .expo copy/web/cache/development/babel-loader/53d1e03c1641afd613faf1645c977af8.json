{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MLab\\\\Desktop\\\\React-Native\\\\X-Urgency\\\\x-urgency-application\\\\src\\\\Screens\\\\UploadVideo.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Card } from \"react-native-paper\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Sharing from \"expo-sharing\";\nexport default function UploadVideo(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImage = _useState2[0],\n      setSelectedImage = _useState2[1];\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 11:\n            setSelectedImage({\n              localUri: pickerResult.uri\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openShareDialogAsync = function openShareDialogAsync() {\n    return _regeneratorRuntime.async(function openShareDialogAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Sharing.isAvailableAsync());\n\n          case 2:\n            if (_context2.sent) {\n              _context2.next = 5;\n              break;\n            }\n\n            alert(\"Uh oh, sharing isn't available on your platform\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(Sharing.shareAsync(selectedImage.localUri));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (selectedImage !== null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: selectedImage.localUri\n      },\n      style: styles.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"MedicalHome\");\n      },\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Upload Video\")));\n  }\n\n  var _useState3 = useState(\"stroke\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedValue = _useState4[0],\n      setSelectedValue = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"To share a video from your phone/PC , just press the button below!\"), React.createElement(TouchableOpacity, {\n    onPress: openImagePickerAsync,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Pick a video\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    fontSize: 28,\n    textAlign: 'center',\n    color: '#F47066'\n  },\n  instructions: {\n    color: \"#888\",\n    fontSize: 18,\n    marginHorizontal: 15,\n    marginTop: 20\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 20,\n    borderRadius: 5,\n    marginTop: 20\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"#fff\"\n  },\n  thumbnail: {\n    width: 300,\n    height: 300,\n    resizeMode: \"contain\",\n    marginTop: 20\n  },\n  txtField: {\n    width: 285,\n    height: 40,\n    borderRadius: 10,\n    outline: \"none\",\n    backgroundColor: \"lightgrey\",\n    paddingLeft: 10\n  },\n  txtCards: {\n    backgroundColor: \"lightgrey\",\n    width: 285,\n    height: 40,\n    borderRadius: 10,\n    marginLeft: 2,\n    marginTop: 15\n  },\n  picker: {\n    backgroundColor: \"lightgrey\",\n    height: 40,\n    width: 285,\n    borderRadius: 10,\n    marginLeft: 2,\n    marginTop: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/MLab/Desktop/React-Native/X-Urgency/x-urgency-application/src/Screens/UploadVideo.js"],"names":["React","useState","Card","ImagePicker","Sharing","UploadVideo","navigation","selectedImage","setSelectedImage","openImagePickerAsync","requestCameraRollPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","cancelled","localUri","uri","openShareDialogAsync","isAvailableAsync","shareAsync","styles","container","thumbnail","navigate","button","buttonText","selectedValue","setSelectedValue","instructions","StyleSheet","create","backgroundColor","alignItems","justifyContent","header","fontSize","textAlign","color","marginHorizontal","marginTop","padding","borderRadius","width","height","resizeMode","txtField","outline","paddingLeft","txtCards","marginLeft","picker"],"mappings":"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","sourcesContent":["/**\r\n * @description      :\r\n * @author           : TLeeuw\r\n * @group            :\r\n * @created          : 03/11/2021 - 09:44:00\r\n *\r\n * MODIFICATION LOG\r\n * - Version         : 1.0.0\r\n * - Date            : 03/11/2021\r\n * - Author          : TLeeuw\r\n * - Modification    :\r\n **/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Image,\r\n  StyleSheet,\r\n  Picker,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { Card } from \"react-native-paper\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Sharing from \"expo-sharing\";\r\n\r\nexport default function UploadVideo({ navigation }) {\r\n  let [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestCameraRollPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n    setSelectedImage({ localUri: pickerResult.uri });\r\n  };\r\n  let openShareDialogAsync = async () => {\r\n    if (!(await Sharing.isAvailableAsync())) {\r\n      alert(`Uh oh, sharing isn't available on your platform`);\r\n      return;\r\n    }\r\n    await Sharing.shareAsync(selectedImage.localUri);\r\n  };\r\n\r\n  if (selectedImage !== null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Image\r\n          source={{ uri: selectedImage.localUri }}\r\n          style={styles.thumbnail}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate(\"MedicalHome\");\r\n          }}\r\n          style={styles.button}\r\n        >\r\n          <Text style={styles.buttonText}>Upload Video</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const [selectedValue, setSelectedValue] = useState(\"stroke\");\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n   \r\n\r\n        \r\n      <Text style={styles.instructions}>\r\n        To share a video from your phone/PC , just press the button below!\r\n      </Text>\r\n\r\n      <TouchableOpacity onPress={openImagePickerAsync} style={styles.button}>\r\n        <Text style={styles.buttonText}>Pick a video</Text>\r\n      </TouchableOpacity>\r\n\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  header: {\r\n    fontSize: 28, \r\n    textAlign: 'center', \r\n    color: '#F47066',\r\n  },\r\n\r\n\r\n  instructions: {\r\n    color: \"#888\",\r\n    fontSize: 18,\r\n    marginHorizontal: 15,\r\n    marginTop: 20,\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: \"blue\",\r\n    padding: 20,\r\n    borderRadius: 5,\r\n    marginTop: 20,\r\n  },\r\n\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  thumbnail: {\r\n    width: 300,\r\n    height: 300,\r\n    resizeMode: \"contain\",\r\n    marginTop: 20,\r\n  },\r\n\r\n  txtField: {\r\n    width: 285,\r\n    height: 40,\r\n    borderRadius: 10,\r\n    outline: \"none\",\r\n    backgroundColor: \"lightgrey\",\r\n    paddingLeft: 10,\r\n  },\r\n\r\n  txtCards: {\r\n    backgroundColor: \"lightgrey\",\r\n    width: 285,\r\n    height: 40,\r\n    borderRadius: 10,\r\n    marginLeft: 2,\r\n    marginTop: 15,\r\n  },\r\n\r\n  picker: {\r\n    backgroundColor: \"lightgrey\",\r\n    height: 40,\r\n    width: 285,\r\n    borderRadius: 10,\r\n    marginLeft: 2,\r\n    marginTop: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}