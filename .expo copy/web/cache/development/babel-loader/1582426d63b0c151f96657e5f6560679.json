{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MLab\\\\Desktop\\\\React-Native\\\\X-Urgency\\\\x-urgency-application\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { SignIn, SignUp, Home, Strokes, ForgotPassword, DoctorSignUp, MedicalHome } from \"./src/Screens\";\nimport { auth } from \"./src/firebase\";\nimport { ActivityIndicator } from 'react-native-paper';\nimport { LoadSet } from \"./src/firebase\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      successful = _useState2[0],\n      setSuccess = _useState2[1],\n      _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1],\n      _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setLoad = _useState6[1];\n\n  LoadSet(setLoad);\n  console.log(load);\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      setUser(user);\n      setSuccess(true);\n    });\n    return function () {\n      auth.onAuthStateChanged(function (user) {\n        setUser(user);\n        setSuccess(true);\n      });\n    };\n  }, [successful, user]);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, successful ? user ? React.createElement(Stack.Navigator, {\n    initialRouteName: \"SignIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Sign In\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return React.createElement(SignIn, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Sign Up\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return React.createElement(SignUp, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Doctor SignUp\",\n    component: DoctorSignUp,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MedicalHome\",\n    component: MedicalHome,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Reset Password\",\n    component: ForgotPassword,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Home\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return React.createElement(Home, _extends({}, props, {\n      setDone: setSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }\n    }));\n  })) : React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Strokes\",\n    component: Strokes,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"DocHome\",\n    component: MedicalHome,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })) : React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/MLab/Desktop/React-Native/X-Urgency/x-urgency-application/App.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","KeyboardAwareScrollView","SignIn","SignUp","Home","Strokes","ForgotPassword","DoctorSignUp","MedicalHome","auth","ActivityIndicator","LoadSet","Stack","App","successful","setSuccess","user","setUser","load","setLoad","console","log","onAuthStateChanged","headerShown","props"],"mappings":"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","sourcesContent":["/**\r\n    * @description      : \r\n    * @author           : TLeeuw\r\n    * @group            : \r\n    * @created          : 12/10/2021 - 16:06:47\r\n    * \r\n    * MODIFICATION LOG\r\n    * - Version         : 1.0.0\r\n    * - Date            : 12/10/2021\r\n    * - Author          : TLeeuw\r\n    * - Modification    : \r\n**/\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n// You can import from local files\r\nimport { SignIn, SignUp, Home, Strokes, ForgotPassword, DoctorSignUp, MedicalHome } from './src/Screens';\r\nimport { auth } from './src/firebase'\r\nimport { ActivityIndicator } from 'react-native-paper';\r\nimport { LoadSet } from './src/firebase';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {  \r\n  \r\n  const [successful, setSuccess] = useState(false),\r\n    [user, setUser] = useState(null),\r\n    [load, setLoad] = useState();\r\n    LoadSet(setLoad)\r\n    console.log(load)\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      setUser(user)\r\n      setSuccess(true)\r\n    })\r\n    return () => {\r\n      auth.onAuthStateChanged(user => {\r\n        setUser(user)\r\n        setSuccess(true)\r\n      })\r\n    }\r\n  }, [successful, user])\r\n  return (\r\n    <NavigationContainer>\r\n      <KeyboardAwareScrollView>\r\n        {successful ? (\r\n          user ? (\r\n            //Loader\r\n            <Stack.Navigator initialRouteName=\"SignIn\">\r\n              <Stack.Screen name=\"Sign In\" options={{ headerShown: false }} >\r\n                {props => <SignIn {...props} setDone={setSuccess} />}\r\n              </Stack.Screen>\r\n              <Stack.Screen name=\"Sign Up\" options={{ headerShown: false }}>\r\n                {props => <SignUp {...props} setDone={setSuccess} />}\r\n              </Stack.Screen>\r\n              <Stack.Screen name=\"Doctor SignUp\" component={DoctorSignUp} options={{ headerShown: false }}>\r\n              </Stack.Screen>\r\n              <Stack.Screen name=\"MedicalHome\" component={MedicalHome} options={{ headerShown: false }}>\r\n              </Stack.Screen>\r\n              <Stack.Screen name=\"Reset Password\" component={ForgotPassword} options={{ headerShown: false }} />\r\n\r\n              <Stack.Screen name=\"Home\" options={{ headerShown: false }} >\r\n                {props => <Home {...props} setDone={setSuccess} />}\r\n              </Stack.Screen>\r\n              \r\n            </Stack.Navigator>\r\n            \r\n          ) : (\r\n            // Main Application\r\n            <Stack.Navigator initialRouteName=\"Home\">\r\n              \r\n              <Stack.Screen name=\"Strokes\" component={Strokes} options={{ headerShown: false }} />\r\n\r\n              <Stack.Screen name=\"DocHome\" component={MedicalHome} options={{ headerShown: false }} />\r\n              \r\n            </Stack.Navigator>\r\n            \r\n          )\r\n        ) : (\r\n          // Login/Sign functions\r\n          <ActivityIndicator size=\"large\" />\r\n        )}\r\n      </KeyboardAwareScrollView>\r\n    </NavigationContainer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}